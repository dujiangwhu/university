$(function() {    $(".answer-table-radio,.answer-table-checkbox").each(function() {        var a = $(this).closest("td").height();        $(this).outerHeight(a).css({            "line-height": (a - 6) + "px"        })    });    $(document).on("keydown",    function(a) {        if (a.which == 13) {            return false        }    });    $(".fixed-wrapper").each(function() {        var a = $(this).siblings(".answer-table");        $(this).find("th").each(function(b) {            $(this).width(function() {                return a.find("th:eq(" + b + ")").width()            })        })    });    $(window).scroll(function() {        var a = $(this).scrollTop(),        b = 0;        if ($("#preview-banner").length > 0) {            b = 31        }        $(".fixed-wrapper").each(function() {            var c = $(this).next(".answer-table");            var d = c.offset();            if (c.outerHeight() + d.top - $(this).outerHeight() <= a + b) {                $(this).css("display", "none")            } else {                if (d.top <= a + b) {                    $(this).css({                        top: b,                        left: d.left,                        display: "block"                    })                } else {                    $(this).css("display", "none")                }            }        })    });	/*单选题*/    $(".answer-radio>input:radio").on("change",    function() {        $(this).parent().addClass("checked").siblings().removeClass("checked").find("input:text").val("");    });    $(".answer-radio input:text").on("click",    function(a) {        $(this).parent().siblings("input:radio").prop("checked", true).parent().addClass("checked").siblings().removeClass("checked").find("input:text").val("");        a.preventDefault()    });    $(".answer-checkbox>input:checkbox").on("change",    function() {        if ($(this).prop("checked")) {            var a = $(this).parent().addClass("checked").siblings(":visible");            if ($(this).attr("data-exclusive") == 1) {                a.removeClass("checked").find("input:checked").prop("checked", false);                a.find("input:text").val("")            } else {                a.find("input[data-exclusive=1]").not(this).prop("checked", false).parent().removeClass("checked").find("input:text").val("")            }        } else {            $(this).parent().removeClass("checked").find("input:text").val("")        }    });    $(".answer-checkbox input:text").on("click",    function(b) {        var a = $(this).parent().siblings("input:checkbox");        a.prop("checked", true);        if (a.attr("data-exclusive") == 1) {            a.parent().addClass("checked").siblings(":visible").removeClass("checked").find("input:checked").prop("checked", false);            a.parent().siblings().find("input:text").val("")        } else {            a.parent().addClass("checked").siblings(":visible").find("input[data-exclusive=1]").prop("checked", false).parent().removeClass("checked").find("input:text").val("")        }        b.preventDefault()    });    $(".answer-table-radio>input:radio").on("change",    function() {        $('input:radio[name="' + $(this).attr("name") + '"]').parent().removeClass("checked");        $(this).parent().addClass("checked");        $("input:text[data-group=" + $(this).attr("data-group") + "]").val("")    });    $(".answer-table-checkbox>input:checkbox").on("change",    function() {        if ($(this).prop("checked")) {            if ($(this).attr("data-exclusive") == 1) {                $("input:checkbox[data-group=" + $(this).attr("data-group") + "]").not(this).prop("checked", false).parent().removeClass("checked").find("input:text").val("")            } else {                $("input:checkbox[data-group=" + $(this).attr("data-group") + "][data-exclusive=1]").not(this).prop("checked", false).parent().removeClass("checked").find("input:text").val("")            }            $(this).prop("checked", true).parent().addClass("checked")        } else {            $(this).parent().removeClass("checked").find("input:text").val("")        }    });    $(".answer-table-radio input:text").on("click",    function(b) {        var a = $(this).parent().siblings("input");        $("input[data-group=" + $(this).attr("data-group") + "]").prop("checked", false).parent().removeClass("checked").find("input:text").not(this).val("");        a.prop("checked", true).parent().addClass("checked");        b.preventDefault()    });    $(".answer-table-checkbox input:text").on("click",    function(b) {        var a = $(this).parent().siblings("input");        if (a.attr("data-exclusive") == 1) {            $("input[data-group=" + $(this).attr("data-group") + "]").prop("checked", false).parent().removeClass("checked").find("input:text").not(this).val("")        } else {            $("input[data-group=" + $(this).attr("data-group") + "][data-exclusive=1]").prop("checked", false).parent().removeClass("checked").find("input:text").not(this).val("")        }        a.prop("checked", true).parent().addClass("checked");        b.preventDefault()    });    $(".answer-table .answer-table-radio,.answer-table .answer-table-checkbox").hover(function() {        var a = $(this).parent().index();        $(this).closest("tr").siblings("tr").each(function() {            $(this).children("td:eq(" + a + ")").addClass("mouseover")        })    },    function() {        var a = $(this).parent().index();        $(this).closest("tr").siblings("tr").each(function() {            $(this).children("td:eq(" + a + ")").removeClass("mouseover")        })    });    $(".answer-color>li>input:radio").on("change",    function() {        $(this).parent().addClass("checked").siblings().removeClass("checked")    });    $(".answer-color>li>input:checkbox").on("change",    function() {        if ($(this).prop("checked")) {            $(this).parent().addClass("checked")        } else {            $(this).parent().removeClass("checked")        }    });    $(".answer-img>li>a.img-radio").on("click",    function() {        $(this).parent().siblings().find("a.img-radio").removeClass("checked");        $(this).addClass("checked").find("input").prop("checked", true)    });    $(".answer-img>li>a.img-checkbox").on("click",    function() {        if ($(this).hasClass("checked")) {            $(this).removeClass("checked").find("input").prop("checked", false)        } else {            $(this).addClass("checked").find("input").prop("checked", true)        }    });    $(".answer-score-bar .score").hover(function() {        var a = $(this).index();        $(this).parent().find("td:gt(" + (a) + ")").removeClass("checked");        $(this).parent().find("td:lt(" + (++a) + ")").addClass("checked")    },    function() {        var b = $(this).parent();        var a = b.find("input:checked").parent().index();        if (a == -1) {            b.find("td").removeClass("checked")        } else {            b.find("td:gt(" + (a) + ")").removeClass("checked");            b.find("td:lt(" + (++a) + ")").addClass("checked")        }    })});var $_LANG = {    zh: {        T1: "此题必答",        T2: "请填写内容",        T3: "选项个数不符合要求",        T4: "答案格式错误",        T5: "只能输入%s个字符",        T6: "最少输入%s个字符",        T7: "最多输入%s个字符",        T8: "输入的数值不能小于%s",        T9: "输入的数值不能大于%s",        T10: "答案总和必须为%s",        T11: "请回答本行",        T12: "请回答本列",        T99: "非法操作"    },    en: {        T1: "This question is compulsory",        T2: "Please enter answer",        T3: "Number of your selected answers is not correct",        T4: "Answer format is not correct",        T5: "You can only enter %s words",        T6: "You have to enter at least %s words ",        T7: "You can enter at most %s words ",        T8: "The number you entered can’t be less than %s",        T9: " The number you entered can’t be great than %s ",        T10: "Sum of answers must be %s",        T11: "Please answer this row",        T12: "Please answer this column",        T99: "Illegal operations"    },    vn: {        T1: "Câu hỏi này phải trả lời",        T2: "Vui lòng điền vào các nội dung",        T3: "Số lượng các tùy chọn không đáp ứng các yêu cầu",        T4: "Câu trả lời là bị thay đổi",        T5: "Bạn chỉ có thể nhập các ký tự %s",        T6: "Nhân vật tối thiểu đầu vào %s",        T7: "Nhập tối đa ký tự %s",        T8: "Giá trị nhập vào không thể nhỏ hơn %s",        T9: "Giá trị nhập vào không thể được lớn hơn %s",        T10: "Tổng số các câu trả lời phải %s",        T11: "Hãy trả lời Ngân hàng",        T12: "Hãy trả lời cột này",        T99: "hoạt động bất hợp pháp"    },    th: {        T1: "คำถามนี้จะต้องตอบ",        T2: "กรุณากรอกข้อมูลลงในเนื้อหา",        T3: "จำนวนคำตอบที่คุณเลือกไม่ถูกต้อง",        T4: "รูปแบบคำตอบที่ไม่ถูกต้อง",        T5: "คุณสามารถใส่เพียงคำ%s",        T6: "คุณจะต้องป้อนคำที่น้อย%s",        T7: "คุณสามารถป้อนคำที่มากที่สุด%s",        T8: "หมายเลขที่คุณป้อนไม่สามารถจะน้อยกว่า%s",        T9: "หมายเลขที่คุณป้อนไม่สามารถจะดีกว่า%s",        T10: "ผลรวมของคำตอบจะต้องเป็น%s",        T11: "กรุณาตอบแถวนี้",        T12: "กรุณาตอบคอลัมน์นี้",        T99: "การดำเนินการที่ผิดกฎหมาย"    }};Answer = {    _lang: "zh",    _time: 0,	_param:"",    _province: {        "1": "辽宁",        "16": "吉林",        "26": "黑龙江",        "40": "北京",        "41": "天津",        "42": "河北",        "54": "山西",        "66": "内蒙古",        "79": "上海",        "80": "江苏",        "94": "浙江",        "106": "安徽",        "124": "福建",        "134": "江西",        "146": "山东",        "164": "河南",        "182": "湖北",        "196": "湖南",        "211": "广东",        "233": "广西",        "248": "海南",        "251": "重庆",        "252": "四川",        "274": "贵州",        "284": "云南",        "301": "西藏",        "309": "陕西",        "320": "甘肃",        "335": "青海",        "344": "宁夏",        "350": "新疆",        "365": "香港",        "366": "澳门",        "367": "台湾"    },    _city: {        "1": {            "2": "沈阳",            "3": "大连",            "4": "鞍山",            "5": "抚顺",            "6": "本溪",            "7": "丹东",            "8": "锦州",            "9": "营口",            "10": "阜新",            "11": "辽阳",            "12": "盘锦",            "13": "铁岭",            "14": "朝阳",            "15": "葫芦岛"        },        "16": {            "17": "长春",            "18": "四平",            "19": "辽源",            "20": "通化",            "21": "白山",            "22": "松原",            "23": "白城",            "24": "延边",            "25": "吉林"        },        "26": {            "27": "哈尔滨",            "28": "齐齐哈尔",            "29": "大庆",            "30": "牡丹江",            "31": "佳木斯",            "32": "鸡西",            "33": "伊春",            "34": "鹤岗",            "35": "七台河",            "36": "双鸭山",            "37": "黑河",            "38": "绥化",            "39": "大兴安岭地区"        },        "40": {            "40": "北京"        },        "41": {            "41": "天津"        },        "42": {            "43": "石家庄",            "44": "唐山",            "45": "秦皇岛",            "46": "邯郸",            "47": "邢台",            "48": "保定",            "49": "张家口",            "50": "承德",            "51": "沧州",            "52": "廊坊",            "53": "衡水"        },        "54": {            "55": "太原",            "56": "大同",            "57": "阳泉",            "58": "长治",            "59": "晋城",            "60": "朔州",            "61": "晋中",            "62": "运城",            "63": "忻州",            "64": "临汾",            "65": "吕梁"        },        "66": {            "67": "呼和浩特",            "68": "包头",            "69": "乌海",            "70": "赤峰",            "71": "通辽",            "72": "鄂尔多斯",            "73": "呼伦贝尔",            "74": "巴彦淖尔",            "75": "乌兰察布",            "76": "兴安盟",            "77": "锡林郭勒盟",            "78": "阿拉善盟"        },        "79": {            "79": "上海"        },        "80": {            "81": "南京",            "82": "无锡",            "83": "徐州",            "84": "常州",            "85": "苏州",            "86": "南通",            "87": "连云港",            "88": "淮安",            "89": "盐城",            "90": "扬州",            "91": "镇江",            "92": "泰州",            "93": "宿迁"        },        "94": {            "95": "杭州",            "96": "宁波",            "97": "温州",            "98": "嘉兴",            "99": "湖州",            "100": "绍兴",            "101": "金华",            "102": "衢州",            "103": "舟山",            "104": "台州",            "105": "丽水"        },        "106": {            "107": "合肥",            "108": "芜湖",            "109": "蚌埠",            "110": "淮南",            "111": "马鞍山",            "112": "淮北",            "113": "铜陵",            "114": "安庆",            "115": "黄山",            "116": "滁州",            "117": "阜阳",            "118": "宿州",            "119": "巢湖",            "120": "六安",            "121": "亳州",            "122": "池州",            "123": "宣城"        },        "124": {            "125": "福州",            "126": "厦门",            "127": "莆田",            "128": "三明",            "129": "泉州",            "130": "漳州",            "131": "南平",            "132": "龙岩",            "133": "宁德"        },        "134": {            "135": "南昌",            "136": "景德镇",            "137": "萍乡",            "138": "九江",            "139": "新余",            "140": "鹰潭",            "141": "赣州",            "142": "吉安",            "143": "宜春",            "144": "抚州",            "145": "上饶"        },        "146": {            "147": "济南",            "148": "青岛",            "149": "烟台",            "150": "枣庄",            "151": "东营",            "152": "淄博",            "153": "潍坊",            "154": "威海",            "155": "济宁",            "156": "泰安",            "157": "日照",            "158": "莱芜",            "159": "临沂",            "160": "德州",            "161": "聊城",            "162": "滨州",            "163": "菏泽"        },        "164": {            "165": "郑州",            "166": "开封",            "167": "洛阳",            "168": "平顶山",            "169": "焦作",            "170": "鹤壁",            "171": "新乡",            "172": "安阳",            "173": "濮阳",            "174": "许昌",            "175": "漯河",            "176": "三门峡",            "177": "南阳",            "178": "商丘",            "179": "信阳",            "180": "周口",            "181": "驻马店"        },        "182": {            "183": "武汉",            "184": "黄石",            "185": "襄樊",            "186": "十堰",            "187": "荆州",            "188": "宜昌",            "189": "荆门",            "190": "鄂州",            "191": "孝感",            "192": "黄冈",            "193": "咸宁",            "194": "随州",            "195": "恩施州"        },        "196": {            "197": "长沙",            "198": "株洲",            "199": "湘潭",            "200": "衡阳",            "201": "邵阳",            "202": "岳阳",            "203": "常德",            "204": "张家界",            "205": "益阳",            "206": "郴州",            "207": "永州",            "208": "怀化",            "209": "娄底",            "210": "湘西州"        },        "211": {            "212": "广州",            "213": "深圳",            "214": "东莞",            "215": "珠海",            "216": "汕头",            "217": "河源",            "218": "佛山",            "219": "中山",            "220": "梅州",            "221": "潮州",            "222": "韶关",            "223": "江门",            "224": "揭阳",            "225": "湛江",            "226": "肇庆",            "227": "清远",            "228": "汕尾",            "229": "惠州",            "230": "云浮",            "231": "茂名",            "232": "阳江"        },        "233": {            "234": "南宁",            "235": "柳州",            "236": "桂林",            "237": "梧州",            "238": "北海",            "239": "防城港",            "240": "钦州",            "241": "贵港",            "242": "玉林",            "243": "百色",            "244": "贺州",            "245": "河池",            "246": "来宾",            "247": "崇左"        },        "248": {            "249": "海口",            "250": "三亚"        },        "251": {            "251": "重庆"        },        "252": {            "253": "成都",            "254": "自贡",            "255": "攀枝花",            "256": "泸州",            "257": "德阳",            "258": "绵阳",            "259": "广元",            "260": "遂宁",            "261": "内江",            "262": "乐山",            "263": "南充",            "264": "宜宾",            "265": "广安",            "266": "达州",            "267": "眉山",            "268": "雅安",            "269": "巴中",            "270": "资阳",            "271": "阿坝州",            "272": "甘孜州",            "273": "凉山州"        },        "274": {            "275": "贵阳",            "276": "六盘水",            "277": "遵义",            "278": "安顺",            "279": "铜仁地区",            "280": "毕节地区",            "281": "黔西南州",            "282": "黔东南州",            "283": "黔南州"        },        "284": {            "285": "昆明",            "286": "曲靖",            "287": "玉溪",            "288": "保山",            "289": "昭通",            "290": "丽江",            "291": "普洱",            "292": "临沧",            "293": "文山州",            "294": "红河州",            "295": "西双版纳州",            "296": "楚雄州",            "297": "大理州",            "298": "德宏州",            "299": "怒江州",            "300": "迪庆州"        },        "301": {            "302": "拉萨",            "303": "昌都地区",            "304": "山南地区",            "305": "日喀则地区",            "306": "那曲地区",            "307": "阿里地区",            "308": "林芝地区"        },        "309": {            "310": "西安",            "311": "铜川",            "312": "宝鸡",            "313": "咸阳",            "314": "渭南",            "315": "延安",            "316": "汉中",            "317": "榆林",            "318": "安康",            "319": "商洛"        },        "320": {            "321": "兰州",            "322": "嘉峪关",            "323": "金昌",            "324": "白银",            "325": "天水",            "326": "武威",            "327": "张掖",            "328": "平凉",            "329": "酒泉",            "330": "庆阳",            "331": "定西",            "332": "陇南",            "333": "临夏州",            "334": "甘南州"        },        "335": {            "336": "西宁",            "337": "海东地区",            "338": "海北州",            "339": "黄南州",            "340": "海南州",            "341": "果洛州",            "342": "玉树州",            "343": "海西州"        },        "344": {            "345": "银川",            "346": "石嘴山",            "347": "吴忠",            "348": "固原",            "349": "中卫"        },        "350": {            "351": "乌鲁木齐",            "352": "克拉玛依",            "353": "吐鲁番地区",            "354": "哈密地区",            "355": "和田地区",            "356": "阿克苏地区",            "357": "喀什地区",            "358": "克孜勒苏柯尔克孜",            "359": "巴音郭楞蒙古",            "360": "昌吉回族",            "361": "博尔塔拉蒙古",            "362": "伊犁哈萨克",            "363": "塔城地区",            "364": "阿勒泰地区"        },        "365": {            "365": "香港"        },        "366": {            "366": "澳门"        },        "367": {            "367": "台湾"        }    },    timer: function(a, b) {        this._time = a;        setInterval(function() {--Answer._time;            if (Answer._time > 0) {                $("#timerover span").text(Answer._time)            } else {                if (b) {                    Answer.next()                }                $("#timerover").remove()            }        },        1000)    },    prev: function() {        s70 = 1;        $("input[name=action]").val("a35b941b04");        $("#page-prev,#page-next").prop("disabled", true);        $("#answer").submit()    },    next: function() {        if (this._time <= 0 && this.verify()) {            s70 = 1;            $("#page-prev,#page-next").prop("disabled", true);            $("#answer").submit()        }    },    verify: function() {        var b = 0,        e = 0,        a = 0,        d = 0,        f = 0,        c = "left";        $(".question[data-mandatory=1]").each(function() {            target = $(this).find(".question-title");            switch ($(this).attr("data-type")) {            case "1":            case "13":            case "14":                $(this).find("select").each(function() {                    if ($(this).val() == "") {                        b = 1;                        return false                    }                });                break;            case "4":                var n = $(this).find(".form-text"),                k = $.trim(n.val()),                o = n.attr("data-preg"),                h = k.length;                e = n.attr("data-min");                a = n.attr("data-max");                d = n.attr("data-mininum");                f = n.attr("data-maxinum");                if (k == "") {                    b = 1;                    break                }                if (o != "") {                    var p = new RegExp(o);                    if (!p.test(k)) {                        b = 4;                        break                    }                }                if (e == a && e > 0) {                    if (h != e) {                        b = 5;                        break                    }                } else {                    if (e > 0 && h < e) {                        b = 6;                        break                    } else {                        if (a > 0 && h > a) {                            b = 7;                            break                        }                    }                }                if (d != "" && d != "0") {                    k = parseInt(k);                    d = parseFloat(d);                    if (k < d) {                        b = 8;                        break                    }                }                if (f != "" && f != "0") {                    k = parseInt(k);                    f = parseFloat(f);                    if (k > f) {                        b = 9;                        break                    }                }                break;            case "15":                if ($.trim($(this).find(".form-date").val()) == "") {                    b = 1                }                break;            case "16":                if ($.trim($(this).find(".form-time").val()) == "") {                    b = 1                }                break;            case "5":                var q = $(this);                if ($(this).find(".form-table").length > 0) {                    if ($(this).attr("data-direction") == "Y") {                        $(this).find("tr.mandatory th[data-mandatory=1]").each(function() {                            var s = $(this).attr("data-group");                            var r = false;                            q.find(".form-table[data-group=" + s + "]").each(function() {                                if ($.trim($(this).val()) != "") {                                    r = true;                                    return false                                }                            });                            if (!r) {                                c = "top";                                target = $(this).find(".table-col-text");                                b = 12;                                return false                            }                        })                    } else {                        $(this).find("tr[data-mandatory=1]").each(function() {                            var r = false,                            s = $(this);                            s.find(".form-table").each(function() {                                if ($.trim($(this).val()) != "") {                                    r = true;                                    return false                                }                            });                            if (!r) {                                target = s.find(".table-question-text");                                b = 11;                                return false                            }                        })                    }                    if (b == 0) {                        $(this).find(".form-child-other").each(function() {                            var s = $(this).attr("data-group");                            if ($.trim($(this).val()) == "") {                                var r = false;                                $(".form-table[data-group=" + s + "]").each(function() {                                    if ($.trim($(this).val()) != "") {                                        r = true;                                        return false                                    }                                });                                if (r) {                                    target = $(this).parents("tr");                                    b = 2;                                    return false                                }                            }                        })                    }                } else {                    if ($(this).attr("data-direction") == "Y") {                        $(this).find("tr.mandatory th[data-mandatory=1]").each(function() {                            var r = $(this).attr("data-group");                            if (q.find("input:radio[data-group=" + r + "]:checked,input:checkbox[data-group=" + r + "]:checked").length <= 0) {                                target = $(this).find(".table-col-text");                                c = "top";                                b = 12;                                return false                            }                        })                    } else {                        $(this).find("tr[data-mandatory=1]").each(function() {                            var r = $(this);                            if (r.find("input:radio:checked,input:checkbox:checked").length <= 0) {                                target = r.find(".table-question-text,.score-question-text");                                b = 11;                                return false                            }                        })                    }                    if (b == 0) {                        $(this).find(".form-child-other").each(function() {                            var r = $(this).attr("data-group");                            if ($.trim($(this).val()) == "" && $("input:checked[data-group=" + r + "]").length > 0) {                                target = $(this).parents("tr");                                b = 2;                                return false                            }                        })                    }                    if (b == 0) {                        $(this).find(".form-option-other").each(function() {                            if ($.trim($(this).val()) == "" && $(this).parent().siblings("input:checked").length > 0) {                                target = $(this).parent();                                b = 2;                                c = "top";                                return false                            }                        })                    }                }                break;            case "8":                $(this).find(".droppable").each(function() {                    if (!$(this).hasClass("dropped")) {                        b = 1;                        return false                    }                });                break;            case "9":                var l = parseFloat($(this).attr("data-total")),                m = 0;                $(this).find(".answer-open-val input").each(function() {                    target = $(this).parents("tr");                    var s = $.trim($(this).val());                    if ($(this).attr("data-mandatory") && s == "") {                        b = 1;                        return false                    }                    if (s != "") {                        var t = $(this).attr("data-preg");                        if (t != "") {                            var r = new RegExp(t);                            if (!r.test(s)) {                                b = 4;                                return false                            }                        }                        if (l > 0 && isNaN(s)) {                            b = 4;                            return false                        } else {                            m += parseFloat(s)                        }                    }                });                if (b == 0) {                    $(this).find(".answer-open-txt input[data-mandatory=1]").each(function() {                        var r = $.trim($(this).val());                        if (r == "") {                            b = 2;                            target = $(this).parents("tr");                            return false                        }                    })                }                if (b == 0 && l > 0 && l != m) {                    target = $(this).find(".question-title");                    a = l;                    b = 10                }                break;            case "11":                if ($(this).find(".form-upload").val() == "") {                    b = 1                }                break;            case "2":            case "6":            case "7":            case "10":                var g = $(this).find("input:checked").length,                j = $(this).find("input:checkbox");                e = $(this).attr("data-min");                if (e && j < e) {                    e = j                }                a = $(this).attr("data-max");                if (g <= 0) {                    b = 1                } else {                    if ((e && g < e) || (a && g > a)) {                        b = 3                    } else {                        $(this).find("input:checked").each(function() {                            var r = $(this).siblings("label").find("input:text[data-mandatory=1]");                            if (r.length > 0 && r.val() == "") {                                target = $(this).parent();                                b = 2;                                return false                            }                        })                    }                }                break;            case "3":                var g = $(this).find(".answer-checkbox:visible input:checked").length,                j = $(this).find(".answer-checkbox:visible input:checkbox");                e = $(this).attr("data-min");                if (e && j < e) {                    e = j                }                a = $(this).attr("data-max");                if (g <= 0) {                    b = 1                } else {                    if ((e && g < e) || (a && g > a)) {                        b = 3                    } else {                        $(this).find("input:checked").each(function() {                            var r = $(this).siblings("label").find("input:text[data-mandatory=1]");                            if (r.length > 0 && r.val() == "") {                                target = $(this).parent();                                b = 2;                                return false                            }                        })                    }                }                break;            case "17":                $(this).find("select").each(function() {                    if ($(this).val() == "") {                        b = 1;                        return false                    }                });                var i = $(this).find("input");                if (i.length > 0 && $.trim(i.val()) == "") {                    b = 2                }                break;            default:                b = 99;                break            }            if (b > 0) {                return false            }        });        if (b > 0) {            switch (b) {            case 1:                msg = $_LANG[this._lang].T1;                break;            case 2:                msg = $_LANG[this._lang].T2;                break;            case 3:                msg = $_LANG[this._lang].T3;                break;            case 4:                msg = $_LANG[this._lang].T4;                break;            case 5:                msg = sprintf($_LANG[this._lang].T5, e);                break;            case 6:                msg = sprintf($_LANG[this._lang].T6, e);                break;            case 7:                msg = sprintf($_LANG[this._lang].T7, a);                break;            case 8:                msg = sprintf($_LANG[this._lang].T8, d);                break;            case 9:                msg = sprintf($_LANG[this._lang].T9, f);                break;            case 10:                msg = sprintf($_LANG[this._lang].T10, a);                break;            case 11:                msg = sprintf($_LANG[this._lang].T11, a);                break;            case 12:                msg = sprintf($_LANG[this._lang].T12, a);                break;            default:                msg = $_LANG[this._lang].T99;                break            }            Answer.msg(target, msg, c);            return false        } else {            return true        }    },    upload: function(f, a, h, j) {        var d = $(f).parents(".question"),        b = d.attr("data-max"),        g = d.attr("id"),        c = '<form action="/pc/a" enctype="multipart/form-data" target="iframe' + g + '" method="POST"><div class="modal-header"><h4>上传文件</h4></div><div id="modal-answer-upload" class="modal-body"><ul class="answer-upload-item">';        for (var e = 1; e <= b; ++e) {            c += '<li><input type="file" name="' + e + "_" + Math.random() + '" /></li>'        }        c += "</ul>";        c += '</div></div><div class="modal-footer clearfix"><input type="hidden" name="sid" value="' + a + '" /><input type="hidden" name="field" value="' + h + '" /><input type="hidden" name="qid" value="' + g + '" /><input type="hidden" name="op" value="upload" /><button type="reset" class="btn pull-left"><i class="icon-undo"></i>重置</button><button type="submit" class="btn btn-warning pull-right" onclick="return Answer.uploadCheck(' + j + ');"><i class="icon-upload-alt"></i>保存</button></div><iframe style="display:none;" name="iframe' + g + '"></iframe>';        $.fancybox.open({            content: c,            helpers: {                overlay: {                    closeClick: false                }            }        })    },    uploadCheck: function(c) {        var b = true,        e = {            2 : ".jpg.gif.png"        },        d = {            2 : "请选择.jpg、.gif、.png格式的图片文件"        },        a = [];        $("input[type=file]").each(function() {            var h = $(this).val();            if (h == "") {                alert("请选择要上传的文件");                b = false;                return false            } else {                var f = h.lastIndexOf("."),                g = h.substr(f).toLowerCase();                if (f == -1 || (c != 1 && e[c].indexOf(g) == -1)) {                    $(this).popover({                        content: d[c],                        placement: "right"                    }).popover("show");                    setTimeout(function() {                        $(".popover").remove()                    },                    2000);                    b = false;                    return false                } else {                    if ($.inArray(h, a) != -1) {                        $(this).popover({                            content: "不能上传相同的文件",                            placement: "right"                        }).popover("show");                        setTimeout(function() {                            $(".popover").remove()                        },                        2000);                        b = false;                        return false                    }                }                a.push(h)            }        });        return b    },    uploadSave: function(a, g, e, d) {        var b = "",        f = "";        for (var c in d) {            b += '<div class="list"><div class="answer-upload-file">' + c + "</div></div>";            f += "," + d[c]        }        $("input[name=" + e + "]").val(f.substr(1));        $("#" + g + " .answer-upload-list").append(b);        $("#" + g + " .answer-upload-btn").remove();        $.fancybox.close()    },    getBirthday: function(f) {        var d = $("#birthyear" + f).val(),        b = $("#birthmonth" + f).val(),        e = $("#birthday" + f).val();        var a = '<option value="">日</option>';        for (var c = 1; c < 29; c++) {            a += '<option value="' + c + '">' + c + "</option>"        }        if (b != "2") {            a += '<option value="29">29</option><option value="30">30</option>';            switch (b) {            case "1":            case "3":            case "5":            case "7":            case "8":            case "10":            case "12":                a += '<option value="31">31</option>';                break            }        } else {            if (d != "" && (d % 400 == 0 || (d % 4 == 0 && d % 100 != 0))) {                a += '<option value="29">29</option>'            }        }        $("#birthday" + f).html(a).val(e);        this.setBirthday(f)    },    setBirthday: function(d) {        var b = $("#birthyear" + d).val(),        a = $("#birthmonth" + d).val(),        c = $("#birthday" + d).val();        $("#" + d).val(b + "-" + a + "-" + c)    },    getCity: function(e, f, d) {        var a = $(e).val(),        c = '<option value="">城市</option>';        for (var b in this._city[a]) {            c += '<option value="' + b + '"' + (b == d ? " selected": "") + ">" + this._city[a][b] + "</option>"        }        $("#" + f).html(c)    },    msg: function(b, d, a) {        var c = $("#page-next").offset().top - b.offset().top;        if (a == undefined) {            a = "left"        }        $("html,body").animate({            scrollTop: b.offset().top - 120        },        c,        function() {            b.popover({                content: d,                placement: a            }).popover("show");            setTimeout(function() {                b.popover("destroy")            },            2000)        });        $("#page-prev,#page-next").prop("disabled", false)    }};function str_repeat(b, a) {    for (var c = []; a > 0; c[--a] = b) {}    return c.join("")}function sprintf() {    var g = 0,    k, h = arguments[g++],    d = [],    e,    b,    j,    l,    n = "";    while (h) {        if (e = /^[^\x25]+/.exec(h)) {            d.push(e[0])        } else {            if (e = /^\x25{2}/.exec(h)) {                d.push("%")            } else {                if (e = /^\x25(?:(\d+)\$)?(\+)?(0|'[^$])?(-)?(\d+)?(?:\.(\d+))?([b-fosuxX])/.exec(h)) {                    if (((k = arguments[e[1] || g++]) == null) || (k == undefined)) {                        throw ("Too few arguments.")                    }                    if (/[^s]/.test(e[7]) && (typeof(k) != "number")) {                        throw ("Expecting number but found " + typeof(k))                    }                    switch (e[7]) {                    case "b":                        k = k.toString(2);                        break;                    case "c":                        k = String.fromCharCode(k);                        break;                    case "d":                        k = parseInt(k);                        break;                    case "e":                        k = e[6] ? k.toExponential(e[6]) : k.toExponential();                        break;                    case "f":                        k = e[6] ? parseFloat(k).toFixed(e[6]) : parseFloat(k);                        break;                    case "o":                        k = k.toString(8);                        break;                    case "s":                        k = ((k = String(k)) && e[6] ? k.substring(0, e[6]) : k);                        break;                    case "u":                        k = Math.abs(k);                        break;                    case "x":                        k = k.toString(16);                        break;                    case "X":                        k = k.toString(16).toUpperCase();                        break                    }                    k = (/[def]/.test(e[7]) && e[2] && k >= 0 ? "+" + k: k);                    j = e[3] ? e[3] == "0" ? "0": e[3].charAt(1) : " ";                    l = e[5] - String(k).length - n.length;                    b = e[5] ? str_repeat(j, l) : "";                    d.push(n + (e[4] ? k + b: b + k))                } else {                    throw ("Huh ?!")                }            }        }        h = h.substring(e[0].length)    }    return d.join("")};